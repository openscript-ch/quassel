name: "quassel"

volumes:
  storage:
  database:
  letsencrypt:

services:
  proxy:
    image: traefik:3.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/traefik.yml
      - letsencrypt:/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.enable=true"
      - "traefik.constraint-label=proxy"
      - "traefik.http.middlewares.auth.basicauth.users=harold.finch:$$2y$$05$$eSfwvKJnawY0Ac2Rdsm2A.iQwvEEL0VcOp.y0aOh0BqTmGacAgmm2"
      - "traefik.http.middlewares.dashboard-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.dashboard-https-redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.dashboard-https.rule=Host(`proxy.test.example.com`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard-https.entrypoints=https"
      - "traefik.http.routers.dashboard-https.tls.certresolver=defaultResolver"
      - "traefik.http.routers.dashboard-https.service=api@internal"
      - "traefik.http.routers.dashboard-https.middlewares=auth"
      - "traefik.http.routers.dashboard-http.rule=Host(`proxy.test.example.com`)"
      - "traefik.http.routers.dashboard-http.entrypoints=http"
      - "traefik.http.routers.dashboard-http.middlewares=dashboard-https-redirect"
      - "traefik.http.services.dashboard.loadbalancer.server.port=80"

  backend:
    image: ghcr.io/openscript-ch/quassel-backend:latest
    volumes:
      - storage:/app/storage
    depends_on:
      - database
    environment:
      LANG: C.UTF-8
      CORS_ORIGIN: https://test.example.com
      SESSION_SECRET: secret
      SESSION_SALT: salt
      DATABASE_HOST: database
      DATABASE_PASSWORD: secret
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.middlewares.backend-redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.backend-http.middlewares=backend-redirect-https"
      - "traefik.http.routers.backend-http.rule=Host(`api.test.example.com`)"
      - "traefik.http.routers.backend-http.entrypoints=http"
      - "traefik.http.routers.backend-https.rule=Host(`api.test.example.com`)"
      - "traefik.http.routers.backend-https.entrypoints=https"
      - "traefik.http.routers.backend-https.tls.certresolver=defaultResolver"
      - "traefik.http.routers.backend-https-service=backend-http-service"
      - "traefik.http.services.backend-http-service.loadbalancer.server.port=3000"

  database:
    image: postgres:17.0-alpine
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "secret"

  frontend:
    image: ghcr.io/openscript-ch/quassel-frontend:latest
    environment:
      API_URL: https://api.test.example.com
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.middlewares.frontend-redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.frontend-http.middlewares=frontend-redirect-https"
      - "traefik.http.routers.frontend-http.rule=Host(`test.example.com`)"
      - "traefik.http.routers.frontend-http.entrypoints=http"
      - "traefik.http.routers.frontend-https.rule=Host(`test.example.com`)"
      - "traefik.http.routers.frontend-https.entrypoints=https"
      - "traefik.http.routers.frontend-https.tls.certresolver=defaultResolver"
      - "traefik.http.routers.frontend-https-service=frontend-http-service"
      - "traefik.http.services.frontend-http-service.loadbalancer.server.port=80"

  mockup:
    image: ghcr.io/openscript-ch/quassel-mockup:latest
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.middlewares.mockup-redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.mockup-http.middlewares=mockup-redirect-https"
      - "traefik.http.routers.mockup-http.rule=Host(`mockup.test.example.com`)"
      - "traefik.http.routers.mockup-http.entrypoints=http"
      - "traefik.http.routers.mockup-https.rule=Host(`mockup.test.example.com`)"
      - "traefik.http.routers.mockup-https.entrypoints=https"
      - "traefik.http.routers.mockup-https.tls.certresolver=defaultResolver"
      - "traefik.http.routers.mockup-https-service=mockup-http-service"
      - "traefik.http.services.mockup-http-service.loadbalancer.server.port=80"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --http-api-update
    environment:
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_HTTP_API_TOKEN}
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - 8080:8080
