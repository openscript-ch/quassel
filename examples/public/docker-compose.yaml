name: "quassel"

volumes:
  storage:
  database:
  letsencrypt:

services:
  proxy:
    image: traefik:3.2
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/traefik.yml
      - letsencrypt:/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.enable=true"
      - "traefik.constraint-label=proxy"
      - "traefik.http.middlewares.auth.basicauth.users=harold.finch:$$2y$$05$$eSfwvKJnawY0Ac2Rdsm2A.iQwvEEL0VcOp.y0aOh0BqTmGacAgmm2"
      - "traefik.http.middlewares.dashboard-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.dashboard-https-redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.dashboard-https.rule=Host(`proxy.test.example.com`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard-https.entrypoints=https"
      - "traefik.http.routers.dashboard-https.tls.certresolver=defaultResolver"
      - "traefik.http.routers.dashboard-https.service=api@internal"
      - "traefik.http.routers.dashboard-https.middlewares=auth"
      - "traefik.http.routers.dashboard-http.rule=Host(`proxy.test.example.com`)"
      - "traefik.http.routers.dashboard-http.entrypoints=http"
      - "traefik.http.routers.dashboard-http.middlewares=dashboard-https-redirect"
      - "traefik.http.services.dashboard.loadbalancer.server.port=80"

  backend:
    image: ghcr.io/openscript-ch/quassel-backend:latest
    restart: unless-stopped
    volumes:
      - storage:/app/storage
    depends_on:
      - database
    environment:
      LANG: C.UTF-8
      TZ: Etc/UTC
      DATABASE_URL: "postgresql://postgres:secret@database/quassel_production"
      CORS_ORIGIN: https://test.example.com
      SESSION_SECRET: secret
      SESSION_SALT: salt
      DATABASE_HOST: database
      DATABASE_PASSWORD: secret
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.middlewares.backend-redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.backend-http.middlewares=backend-redirect-https"
      - "traefik.http.routers.backend-http.rule=Host(`api.test.example.com`)"
      - "traefik.http.routers.backend-http.entrypoints=http"
      - "traefik.http.routers.backend-https.rule=Host(`api.test.example.com`)"
      - "traefik.http.routers.backend-https.entrypoints=https"
      - "traefik.http.routers.backend-https.tls.certresolver=defaultResolver"
      - "traefik.http.routers.backend-https-service=backend-http-service"
      - "traefik.http.services.backend-http-service.loadbalancer.server.port=3000"

  database:
    image: postgres:17.0-alpine
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "secret"
      PGTZ: "UTC"

  frontend:
    image: ghcr.io/openscript-ch/quassel-frontend:latest
    restart: unless-stopped
    environment:
      API_URL: https://api.test.example.com
      THEME_COLOR: uzhGold
      TITLE: LEMON
      LOGOS: '[{"path": "/logos/uzh-logo.svg", "alt": "University of Zurich Logo", "url": "https://uzh.ch"}, {"path": "/logos/weltentdecker-logo.png", "alt": "Kleine Weltentdecker Logo", "url": "https://www.psychologie.uzh.ch/de/bereiche/dev/devpsy/Weltentdecker.html"}]'
    volumes:
      - ./logo.svg:/usr/share/nginx/html/logo.svg
      - ./logos/:/usr/share/nginx/html/logos/
      - ./icons/:/usr/share/nginx/html/icons/
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.middlewares.frontend-redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.frontend-http.middlewares=frontend-redirect-https"
      - "traefik.http.routers.frontend-http.rule=Host(`test.example.com`)"
      - "traefik.http.routers.frontend-http.entrypoints=http"
      - "traefik.http.routers.frontend-https.rule=Host(`test.example.com`)"
      - "traefik.http.routers.frontend-https.entrypoints=https"
      - "traefik.http.routers.frontend-https.tls.certresolver=defaultResolver"
      - "traefik.http.routers.frontend-https-service=frontend-http-service"
      - "traefik.http.services.frontend-http-service.loadbalancer.server.port=80"

  website:
    image: ghcr.io/openscript-ch/quassel-website:latest
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.middlewares.website-redirect-to-www.redirectregex.regex=^https?://example.com(.*)"
      - "traefik.http.middlewares.website-redirect-to-www.redirectregex.replacement=https://www.example.com$${1}"
      - "traefik.http.middlewares.website-redirect-to-www.redirectregex.permanent=true"
      - "traefik.http.middlewares.website-redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.website-redirect-to-https.redirectscheme.permanent=true"
      - "traefik.http.routers.website-http.middlewares=website-redirect-to-www,website-redirect-to-https"
      - "traefik.http.routers.website-http.rule=Host(`example.com`) || Host(`www.example.com`)"
      - "traefik.http.routers.website-http.entrypoints=http"
      - "traefik.http.routers.website-https.middlewares=website-redirect-to-www"
      - "traefik.http.routers.website-https.rule=Host(`example.com`) || Host(`www.example.com`)"
      - "traefik.http.routers.website-https.entrypoints=https"
      - "traefik.http.routers.website-https.tls.certresolver=defaultResolver"
      - "traefik.http.services.website-http-service.loadbalancer.server.port=80"

  mockup:
    image: ghcr.io/openscript-ch/quassel-mockup:latest
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.middlewares.mockup-redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.mockup-http.middlewares=mockup-redirect-https"
      - "traefik.http.routers.mockup-http.rule=Host(`mockup.test.example.com`)"
      - "traefik.http.routers.mockup-http.entrypoints=http"
      - "traefik.http.routers.mockup-https.rule=Host(`mockup.test.example.com`)"
      - "traefik.http.routers.mockup-https.entrypoints=https"
      - "traefik.http.routers.mockup-https.tls.certresolver=defaultResolver"
      - "traefik.http.routers.mockup-https-service=mockup-http-service"
      - "traefik.http.services.mockup-http-service.loadbalancer.server.port=80"

  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --http-api-update
    environment:
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_HTTP_API_TOKEN}
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - 8080:8080

  metrics:
    image: grafana/agent:v0.43.3
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./grafana-agent.yaml:/etc/grafana-agent.yaml
    command:
      - --config.file=/etc/grafana-agent.yaml

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro,rslave

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro,rslave
    command:
      - --path.procfs=/host/proc
      - --path.rootfs=/rootfs
      - --path.sysfs=/host/sys
      - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
      - --no-collector.arp
      - --no-collector.btrfs
      - --no-collector.infiniband
      - --no-collector.xfs
      - --no-collector.zfs
