name: Deploy to registries

on:
  workflow_call:
    inputs:
      publishedPackages:
        required: true
        type: string
      containers:
        required: true
        type: string
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy-images:
    name: Build and deploy images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(inputs.containers) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          ref: ${{ matrix.package.name }}@${{ matrix.package.version }}
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Generate tags
        id: set-tags
        run: |
          VERSION=${{ matrix.package.version }}
          NAME=${{ matrix.package.name }}
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          SHORTNAME=$(echo $NAME | cut -d/ -f2)
          echo "MAJOR=$MAJOR" >> $GITHUB_OUTPUT
          echo "MINOR=$MINOR" >> $GITHUB_OUTPUT
          echo "BASENAME=ghcr.io/openscript-ch/quassel-$SHORTNAME" >> $GITHUB_OUTPUT

      - name: Build and deploy images
        env:
          PACKAGE_NAME: ${{ matrix.package.name }}
          PACKAGE_VERSION: ${{ matrix.package.version }}
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_TAGS: |
            ${{ steps.set-tags.outputs.BASENAME }}:latest
            ${{ steps.set-tags.outputs.BASENAME }}:${{ github.sha }}
            ${{ steps.set-tags.outputs.BASENAME }}:${{ matrix.package.version }}
            ${{ steps.set-tags.outputs.BASENAME }}:${{steps.set-tags.outputs.MAJOR}}
            ${{ steps.set-tags.outputs.BASENAME }}:${{steps.set-tags.outputs.MAJOR}}.${{steps.set-tags.outputs.MINOR}}
        run: |
          if pnpm nx show projects -t container | grep -q ${{ env.PACKAGE_NAME }}; then
            echo "Running container target for ${{ env.PACKAGE_NAME }}:${{ env.PACKAGE_VERSION }}"
            pnpm nx run ${{ env.PACKAGE_NAME }}:container
          else
            echo "Skipping ${{ env.PACKAGE_NAME }}:${{ env.PACKAGE_VERSION }} as it does not have a container target"
          fi

  notify-about-new-images:
    needs: build-and-deploy-images
    name: Notify about new images
    runs-on: ubuntu-latest
    steps:
      - name: Trigger watchtower
        run: |
          curl -H "Authorization: Bearer ${{ secrets.WATCHTOWER_TOKEN }}" http://test.quassel.ch:8080/v1/update
