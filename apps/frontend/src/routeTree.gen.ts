/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as SessionImport } from "./routes/session";
import { Route as AuthImport } from "./routes/_auth";
import { Route as AuthIndexImport } from "./routes/_auth/index";
import { Route as AuthQuestionnaireImport } from "./routes/_auth/questionnaire";
import { Route as AuthAdministrationImport } from "./routes/_auth/administration";
import { Route as AuthQuestionnaireIndexImport } from "./routes/_auth/questionnaire/index";
import { Route as AuthAdministrationIndexImport } from "./routes/_auth/administration/index";
import { Route as AuthQuestionnaireQuestionnaireImport } from "./routes/_auth/questionnaire/_questionnaire";
import { Route as AuthAdministrationUsersImport } from "./routes/_auth/administration/users";
import { Route as AuthAdministrationStudiesImport } from "./routes/_auth/administration/studies";
import { Route as AuthAdministrationQuestionnairesImport } from "./routes/_auth/administration/questionnaires";
import { Route as AuthAdministrationParticipantsImport } from "./routes/_auth/administration/participants";
import { Route as AuthAdministrationLanguagesImport } from "./routes/_auth/administration/languages";
import { Route as AuthAdministrationExportImport } from "./routes/_auth/administration/export";
import { Route as AuthAdministrationCarersImport } from "./routes/_auth/administration/carers";
import { Route as AuthAdministrationUsersIndexImport } from "./routes/_auth/administration/users/index";
import { Route as AuthAdministrationStudiesIndexImport } from "./routes/_auth/administration/studies/index";
import { Route as AuthAdministrationQuestionnairesIndexImport } from "./routes/_auth/administration/questionnaires/index";
import { Route as AuthAdministrationParticipantsIndexImport } from "./routes/_auth/administration/participants/index";
import { Route as AuthAdministrationLanguagesIndexImport } from "./routes/_auth/administration/languages/index";
import { Route as AuthAdministrationExportIndexImport } from "./routes/_auth/administration/export/index";
import { Route as AuthAdministrationCarersIndexImport } from "./routes/_auth/administration/carers/index";
import { Route as AuthQuestionnaireQuestionnaireParticipantImport } from "./routes/_auth/questionnaire/_questionnaire/participant";
import { Route as AuthQuestionnaireQuestionnaireNewImport } from "./routes/_auth/questionnaire/_questionnaire/new";
import { Route as AuthAdministrationUsersNewImport } from "./routes/_auth/administration/users/new";
import { Route as AuthAdministrationStudiesNewImport } from "./routes/_auth/administration/studies/new";
import { Route as AuthAdministrationParticipantsNewImport } from "./routes/_auth/administration/participants/new";
import { Route as AuthAdministrationParticipantsImportImport } from "./routes/_auth/administration/participants/import";
import { Route as AuthAdministrationLanguagesNewImport } from "./routes/_auth/administration/languages/new";
import { Route as AuthAdministrationCarersNewImport } from "./routes/_auth/administration/carers/new";
import { Route as AuthQuestionnaireQuestionnaireIdRemarksImport } from "./routes/_auth/questionnaire/_questionnaire/$id/remarks";
import { Route as AuthQuestionnaireQuestionnaireIdPeriodImport } from "./routes/_auth/questionnaire/_questionnaire/$id/period";
import { Route as AuthQuestionnaireQuestionnaireIdOverviewImport } from "./routes/_auth/questionnaire/_questionnaire/$id/overview";
import { Route as AuthQuestionnaireQuestionnaireIdEntriesImport } from "./routes/_auth/questionnaire/_questionnaire/$id/entries";
import { Route as AuthAdministrationUsersEditIdImport } from "./routes/_auth/administration/users/edit.$id";
import { Route as AuthAdministrationStudiesEditIdImport } from "./routes/_auth/administration/studies/edit.$id";
import { Route as AuthAdministrationQuestionnairesEditIdImport } from "./routes/_auth/administration/questionnaires/edit.$id";
import { Route as AuthAdministrationParticipantsEditIdImport } from "./routes/_auth/administration/participants/edit.$id";
import { Route as AuthAdministrationLanguagesEditIdImport } from "./routes/_auth/administration/languages/edit.$id";
import { Route as AuthAdministrationCarersEditIdImport } from "./routes/_auth/administration/carers/edit.$id";

// Create/Update Routes

const SessionRoute = SessionImport.update({
  id: "/session",
  path: "/session",
  getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
  id: "/_auth",
  getParentRoute: () => rootRoute,
} as any);

const AuthIndexRoute = AuthIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => AuthRoute,
} as any);

const AuthQuestionnaireRoute = AuthQuestionnaireImport.update({
  id: "/questionnaire",
  path: "/questionnaire",
  getParentRoute: () => AuthRoute,
} as any);

const AuthAdministrationRoute = AuthAdministrationImport.update({
  id: "/administration",
  path: "/administration",
  getParentRoute: () => AuthRoute,
} as any);

const AuthQuestionnaireIndexRoute = AuthQuestionnaireIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => AuthQuestionnaireRoute,
} as any);

const AuthAdministrationIndexRoute = AuthAdministrationIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => AuthAdministrationRoute,
} as any);

const AuthQuestionnaireQuestionnaireRoute =
  AuthQuestionnaireQuestionnaireImport.update({
    id: "/_questionnaire",
    getParentRoute: () => AuthQuestionnaireRoute,
  } as any);

const AuthAdministrationUsersRoute = AuthAdministrationUsersImport.update({
  id: "/users",
  path: "/users",
  getParentRoute: () => AuthAdministrationRoute,
} as any);

const AuthAdministrationStudiesRoute = AuthAdministrationStudiesImport.update({
  id: "/studies",
  path: "/studies",
  getParentRoute: () => AuthAdministrationRoute,
} as any);

const AuthAdministrationQuestionnairesRoute =
  AuthAdministrationQuestionnairesImport.update({
    id: "/questionnaires",
    path: "/questionnaires",
    getParentRoute: () => AuthAdministrationRoute,
  } as any);

const AuthAdministrationParticipantsRoute =
  AuthAdministrationParticipantsImport.update({
    id: "/participants",
    path: "/participants",
    getParentRoute: () => AuthAdministrationRoute,
  } as any);

const AuthAdministrationLanguagesRoute =
  AuthAdministrationLanguagesImport.update({
    id: "/languages",
    path: "/languages",
    getParentRoute: () => AuthAdministrationRoute,
  } as any);

const AuthAdministrationExportRoute = AuthAdministrationExportImport.update({
  id: "/export",
  path: "/export",
  getParentRoute: () => AuthAdministrationRoute,
} as any);

const AuthAdministrationCarersRoute = AuthAdministrationCarersImport.update({
  id: "/carers",
  path: "/carers",
  getParentRoute: () => AuthAdministrationRoute,
} as any);

const AuthAdministrationUsersIndexRoute =
  AuthAdministrationUsersIndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => AuthAdministrationUsersRoute,
  } as any);

const AuthAdministrationStudiesIndexRoute =
  AuthAdministrationStudiesIndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => AuthAdministrationStudiesRoute,
  } as any);

const AuthAdministrationQuestionnairesIndexRoute =
  AuthAdministrationQuestionnairesIndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => AuthAdministrationQuestionnairesRoute,
  } as any);

const AuthAdministrationParticipantsIndexRoute =
  AuthAdministrationParticipantsIndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => AuthAdministrationParticipantsRoute,
  } as any);

const AuthAdministrationLanguagesIndexRoute =
  AuthAdministrationLanguagesIndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => AuthAdministrationLanguagesRoute,
  } as any);

const AuthAdministrationExportIndexRoute =
  AuthAdministrationExportIndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => AuthAdministrationExportRoute,
  } as any);

const AuthAdministrationCarersIndexRoute =
  AuthAdministrationCarersIndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => AuthAdministrationCarersRoute,
  } as any);

const AuthQuestionnaireQuestionnaireParticipantRoute =
  AuthQuestionnaireQuestionnaireParticipantImport.update({
    id: "/participant",
    path: "/participant",
    getParentRoute: () => AuthQuestionnaireQuestionnaireRoute,
  } as any);

const AuthQuestionnaireQuestionnaireNewRoute =
  AuthQuestionnaireQuestionnaireNewImport.update({
    id: "/new",
    path: "/new",
    getParentRoute: () => AuthQuestionnaireQuestionnaireRoute,
  } as any);

const AuthAdministrationUsersNewRoute = AuthAdministrationUsersNewImport.update(
  {
    id: "/new",
    path: "/new",
    getParentRoute: () => AuthAdministrationUsersRoute,
  } as any,
);

const AuthAdministrationStudiesNewRoute =
  AuthAdministrationStudiesNewImport.update({
    id: "/new",
    path: "/new",
    getParentRoute: () => AuthAdministrationStudiesRoute,
  } as any);

const AuthAdministrationParticipantsNewRoute =
  AuthAdministrationParticipantsNewImport.update({
    id: "/new",
    path: "/new",
    getParentRoute: () => AuthAdministrationParticipantsRoute,
  } as any);

const AuthAdministrationParticipantsImportRoute =
  AuthAdministrationParticipantsImportImport.update({
    id: "/import",
    path: "/import",
    getParentRoute: () => AuthAdministrationParticipantsRoute,
  } as any);

const AuthAdministrationLanguagesNewRoute =
  AuthAdministrationLanguagesNewImport.update({
    id: "/new",
    path: "/new",
    getParentRoute: () => AuthAdministrationLanguagesRoute,
  } as any);

const AuthAdministrationCarersNewRoute =
  AuthAdministrationCarersNewImport.update({
    id: "/new",
    path: "/new",
    getParentRoute: () => AuthAdministrationCarersRoute,
  } as any);

const AuthQuestionnaireQuestionnaireIdRemarksRoute =
  AuthQuestionnaireQuestionnaireIdRemarksImport.update({
    id: "/$id/remarks",
    path: "/$id/remarks",
    getParentRoute: () => AuthQuestionnaireQuestionnaireRoute,
  } as any);

const AuthQuestionnaireQuestionnaireIdPeriodRoute =
  AuthQuestionnaireQuestionnaireIdPeriodImport.update({
    id: "/$id/period",
    path: "/$id/period",
    getParentRoute: () => AuthQuestionnaireQuestionnaireRoute,
  } as any);

const AuthQuestionnaireQuestionnaireIdOverviewRoute =
  AuthQuestionnaireQuestionnaireIdOverviewImport.update({
    id: "/$id/overview",
    path: "/$id/overview",
    getParentRoute: () => AuthQuestionnaireQuestionnaireRoute,
  } as any);

const AuthQuestionnaireQuestionnaireIdEntriesRoute =
  AuthQuestionnaireQuestionnaireIdEntriesImport.update({
    id: "/$id/entries",
    path: "/$id/entries",
    getParentRoute: () => AuthQuestionnaireQuestionnaireRoute,
  } as any);

const AuthAdministrationUsersEditIdRoute =
  AuthAdministrationUsersEditIdImport.update({
    id: "/edit/$id",
    path: "/edit/$id",
    getParentRoute: () => AuthAdministrationUsersRoute,
  } as any);

const AuthAdministrationStudiesEditIdRoute =
  AuthAdministrationStudiesEditIdImport.update({
    id: "/edit/$id",
    path: "/edit/$id",
    getParentRoute: () => AuthAdministrationStudiesRoute,
  } as any);

const AuthAdministrationQuestionnairesEditIdRoute =
  AuthAdministrationQuestionnairesEditIdImport.update({
    id: "/edit/$id",
    path: "/edit/$id",
    getParentRoute: () => AuthAdministrationQuestionnairesRoute,
  } as any);

const AuthAdministrationParticipantsEditIdRoute =
  AuthAdministrationParticipantsEditIdImport.update({
    id: "/edit/$id",
    path: "/edit/$id",
    getParentRoute: () => AuthAdministrationParticipantsRoute,
  } as any);

const AuthAdministrationLanguagesEditIdRoute =
  AuthAdministrationLanguagesEditIdImport.update({
    id: "/edit/$id",
    path: "/edit/$id",
    getParentRoute: () => AuthAdministrationLanguagesRoute,
  } as any);

const AuthAdministrationCarersEditIdRoute =
  AuthAdministrationCarersEditIdImport.update({
    id: "/edit/$id",
    path: "/edit/$id",
    getParentRoute: () => AuthAdministrationCarersRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_auth": {
      id: "/_auth";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    "/session": {
      id: "/session";
      path: "/session";
      fullPath: "/session";
      preLoaderRoute: typeof SessionImport;
      parentRoute: typeof rootRoute;
    };
    "/_auth/administration": {
      id: "/_auth/administration";
      path: "/administration";
      fullPath: "/administration";
      preLoaderRoute: typeof AuthAdministrationImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/questionnaire": {
      id: "/_auth/questionnaire";
      path: "/questionnaire";
      fullPath: "/questionnaire";
      preLoaderRoute: typeof AuthQuestionnaireImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/": {
      id: "/_auth/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof AuthIndexImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/administration/carers": {
      id: "/_auth/administration/carers";
      path: "/carers";
      fullPath: "/administration/carers";
      preLoaderRoute: typeof AuthAdministrationCarersImport;
      parentRoute: typeof AuthAdministrationImport;
    };
    "/_auth/administration/export": {
      id: "/_auth/administration/export";
      path: "/export";
      fullPath: "/administration/export";
      preLoaderRoute: typeof AuthAdministrationExportImport;
      parentRoute: typeof AuthAdministrationImport;
    };
    "/_auth/administration/languages": {
      id: "/_auth/administration/languages";
      path: "/languages";
      fullPath: "/administration/languages";
      preLoaderRoute: typeof AuthAdministrationLanguagesImport;
      parentRoute: typeof AuthAdministrationImport;
    };
    "/_auth/administration/participants": {
      id: "/_auth/administration/participants";
      path: "/participants";
      fullPath: "/administration/participants";
      preLoaderRoute: typeof AuthAdministrationParticipantsImport;
      parentRoute: typeof AuthAdministrationImport;
    };
    "/_auth/administration/questionnaires": {
      id: "/_auth/administration/questionnaires";
      path: "/questionnaires";
      fullPath: "/administration/questionnaires";
      preLoaderRoute: typeof AuthAdministrationQuestionnairesImport;
      parentRoute: typeof AuthAdministrationImport;
    };
    "/_auth/administration/studies": {
      id: "/_auth/administration/studies";
      path: "/studies";
      fullPath: "/administration/studies";
      preLoaderRoute: typeof AuthAdministrationStudiesImport;
      parentRoute: typeof AuthAdministrationImport;
    };
    "/_auth/administration/users": {
      id: "/_auth/administration/users";
      path: "/users";
      fullPath: "/administration/users";
      preLoaderRoute: typeof AuthAdministrationUsersImport;
      parentRoute: typeof AuthAdministrationImport;
    };
    "/_auth/questionnaire/_questionnaire": {
      id: "/_auth/questionnaire/_questionnaire";
      path: "";
      fullPath: "/questionnaire";
      preLoaderRoute: typeof AuthQuestionnaireQuestionnaireImport;
      parentRoute: typeof AuthQuestionnaireImport;
    };
    "/_auth/administration/": {
      id: "/_auth/administration/";
      path: "/";
      fullPath: "/administration/";
      preLoaderRoute: typeof AuthAdministrationIndexImport;
      parentRoute: typeof AuthAdministrationImport;
    };
    "/_auth/questionnaire/": {
      id: "/_auth/questionnaire/";
      path: "/";
      fullPath: "/questionnaire/";
      preLoaderRoute: typeof AuthQuestionnaireIndexImport;
      parentRoute: typeof AuthQuestionnaireImport;
    };
    "/_auth/administration/carers/new": {
      id: "/_auth/administration/carers/new";
      path: "/new";
      fullPath: "/administration/carers/new";
      preLoaderRoute: typeof AuthAdministrationCarersNewImport;
      parentRoute: typeof AuthAdministrationCarersImport;
    };
    "/_auth/administration/languages/new": {
      id: "/_auth/administration/languages/new";
      path: "/new";
      fullPath: "/administration/languages/new";
      preLoaderRoute: typeof AuthAdministrationLanguagesNewImport;
      parentRoute: typeof AuthAdministrationLanguagesImport;
    };
    "/_auth/administration/participants/import": {
      id: "/_auth/administration/participants/import";
      path: "/import";
      fullPath: "/administration/participants/import";
      preLoaderRoute: typeof AuthAdministrationParticipantsImportImport;
      parentRoute: typeof AuthAdministrationParticipantsImport;
    };
    "/_auth/administration/participants/new": {
      id: "/_auth/administration/participants/new";
      path: "/new";
      fullPath: "/administration/participants/new";
      preLoaderRoute: typeof AuthAdministrationParticipantsNewImport;
      parentRoute: typeof AuthAdministrationParticipantsImport;
    };
    "/_auth/administration/studies/new": {
      id: "/_auth/administration/studies/new";
      path: "/new";
      fullPath: "/administration/studies/new";
      preLoaderRoute: typeof AuthAdministrationStudiesNewImport;
      parentRoute: typeof AuthAdministrationStudiesImport;
    };
    "/_auth/administration/users/new": {
      id: "/_auth/administration/users/new";
      path: "/new";
      fullPath: "/administration/users/new";
      preLoaderRoute: typeof AuthAdministrationUsersNewImport;
      parentRoute: typeof AuthAdministrationUsersImport;
    };
    "/_auth/questionnaire/_questionnaire/new": {
      id: "/_auth/questionnaire/_questionnaire/new";
      path: "/new";
      fullPath: "/questionnaire/new";
      preLoaderRoute: typeof AuthQuestionnaireQuestionnaireNewImport;
      parentRoute: typeof AuthQuestionnaireQuestionnaireImport;
    };
    "/_auth/questionnaire/_questionnaire/participant": {
      id: "/_auth/questionnaire/_questionnaire/participant";
      path: "/participant";
      fullPath: "/questionnaire/participant";
      preLoaderRoute: typeof AuthQuestionnaireQuestionnaireParticipantImport;
      parentRoute: typeof AuthQuestionnaireQuestionnaireImport;
    };
    "/_auth/administration/carers/": {
      id: "/_auth/administration/carers/";
      path: "/";
      fullPath: "/administration/carers/";
      preLoaderRoute: typeof AuthAdministrationCarersIndexImport;
      parentRoute: typeof AuthAdministrationCarersImport;
    };
    "/_auth/administration/export/": {
      id: "/_auth/administration/export/";
      path: "/";
      fullPath: "/administration/export/";
      preLoaderRoute: typeof AuthAdministrationExportIndexImport;
      parentRoute: typeof AuthAdministrationExportImport;
    };
    "/_auth/administration/languages/": {
      id: "/_auth/administration/languages/";
      path: "/";
      fullPath: "/administration/languages/";
      preLoaderRoute: typeof AuthAdministrationLanguagesIndexImport;
      parentRoute: typeof AuthAdministrationLanguagesImport;
    };
    "/_auth/administration/participants/": {
      id: "/_auth/administration/participants/";
      path: "/";
      fullPath: "/administration/participants/";
      preLoaderRoute: typeof AuthAdministrationParticipantsIndexImport;
      parentRoute: typeof AuthAdministrationParticipantsImport;
    };
    "/_auth/administration/questionnaires/": {
      id: "/_auth/administration/questionnaires/";
      path: "/";
      fullPath: "/administration/questionnaires/";
      preLoaderRoute: typeof AuthAdministrationQuestionnairesIndexImport;
      parentRoute: typeof AuthAdministrationQuestionnairesImport;
    };
    "/_auth/administration/studies/": {
      id: "/_auth/administration/studies/";
      path: "/";
      fullPath: "/administration/studies/";
      preLoaderRoute: typeof AuthAdministrationStudiesIndexImport;
      parentRoute: typeof AuthAdministrationStudiesImport;
    };
    "/_auth/administration/users/": {
      id: "/_auth/administration/users/";
      path: "/";
      fullPath: "/administration/users/";
      preLoaderRoute: typeof AuthAdministrationUsersIndexImport;
      parentRoute: typeof AuthAdministrationUsersImport;
    };
    "/_auth/administration/carers/edit/$id": {
      id: "/_auth/administration/carers/edit/$id";
      path: "/edit/$id";
      fullPath: "/administration/carers/edit/$id";
      preLoaderRoute: typeof AuthAdministrationCarersEditIdImport;
      parentRoute: typeof AuthAdministrationCarersImport;
    };
    "/_auth/administration/languages/edit/$id": {
      id: "/_auth/administration/languages/edit/$id";
      path: "/edit/$id";
      fullPath: "/administration/languages/edit/$id";
      preLoaderRoute: typeof AuthAdministrationLanguagesEditIdImport;
      parentRoute: typeof AuthAdministrationLanguagesImport;
    };
    "/_auth/administration/participants/edit/$id": {
      id: "/_auth/administration/participants/edit/$id";
      path: "/edit/$id";
      fullPath: "/administration/participants/edit/$id";
      preLoaderRoute: typeof AuthAdministrationParticipantsEditIdImport;
      parentRoute: typeof AuthAdministrationParticipantsImport;
    };
    "/_auth/administration/questionnaires/edit/$id": {
      id: "/_auth/administration/questionnaires/edit/$id";
      path: "/edit/$id";
      fullPath: "/administration/questionnaires/edit/$id";
      preLoaderRoute: typeof AuthAdministrationQuestionnairesEditIdImport;
      parentRoute: typeof AuthAdministrationQuestionnairesImport;
    };
    "/_auth/administration/studies/edit/$id": {
      id: "/_auth/administration/studies/edit/$id";
      path: "/edit/$id";
      fullPath: "/administration/studies/edit/$id";
      preLoaderRoute: typeof AuthAdministrationStudiesEditIdImport;
      parentRoute: typeof AuthAdministrationStudiesImport;
    };
    "/_auth/administration/users/edit/$id": {
      id: "/_auth/administration/users/edit/$id";
      path: "/edit/$id";
      fullPath: "/administration/users/edit/$id";
      preLoaderRoute: typeof AuthAdministrationUsersEditIdImport;
      parentRoute: typeof AuthAdministrationUsersImport;
    };
    "/_auth/questionnaire/_questionnaire/$id/entries": {
      id: "/_auth/questionnaire/_questionnaire/$id/entries";
      path: "/$id/entries";
      fullPath: "/questionnaire/$id/entries";
      preLoaderRoute: typeof AuthQuestionnaireQuestionnaireIdEntriesImport;
      parentRoute: typeof AuthQuestionnaireQuestionnaireImport;
    };
    "/_auth/questionnaire/_questionnaire/$id/overview": {
      id: "/_auth/questionnaire/_questionnaire/$id/overview";
      path: "/$id/overview";
      fullPath: "/questionnaire/$id/overview";
      preLoaderRoute: typeof AuthQuestionnaireQuestionnaireIdOverviewImport;
      parentRoute: typeof AuthQuestionnaireQuestionnaireImport;
    };
    "/_auth/questionnaire/_questionnaire/$id/period": {
      id: "/_auth/questionnaire/_questionnaire/$id/period";
      path: "/$id/period";
      fullPath: "/questionnaire/$id/period";
      preLoaderRoute: typeof AuthQuestionnaireQuestionnaireIdPeriodImport;
      parentRoute: typeof AuthQuestionnaireQuestionnaireImport;
    };
    "/_auth/questionnaire/_questionnaire/$id/remarks": {
      id: "/_auth/questionnaire/_questionnaire/$id/remarks";
      path: "/$id/remarks";
      fullPath: "/questionnaire/$id/remarks";
      preLoaderRoute: typeof AuthQuestionnaireQuestionnaireIdRemarksImport;
      parentRoute: typeof AuthQuestionnaireQuestionnaireImport;
    };
  }
}

// Create and export the route tree

interface AuthAdministrationCarersRouteChildren {
  AuthAdministrationCarersNewRoute: typeof AuthAdministrationCarersNewRoute;
  AuthAdministrationCarersIndexRoute: typeof AuthAdministrationCarersIndexRoute;
  AuthAdministrationCarersEditIdRoute: typeof AuthAdministrationCarersEditIdRoute;
}

const AuthAdministrationCarersRouteChildren: AuthAdministrationCarersRouteChildren =
  {
    AuthAdministrationCarersNewRoute: AuthAdministrationCarersNewRoute,
    AuthAdministrationCarersIndexRoute: AuthAdministrationCarersIndexRoute,
    AuthAdministrationCarersEditIdRoute: AuthAdministrationCarersEditIdRoute,
  };

const AuthAdministrationCarersRouteWithChildren =
  AuthAdministrationCarersRoute._addFileChildren(
    AuthAdministrationCarersRouteChildren,
  );

interface AuthAdministrationExportRouteChildren {
  AuthAdministrationExportIndexRoute: typeof AuthAdministrationExportIndexRoute;
}

const AuthAdministrationExportRouteChildren: AuthAdministrationExportRouteChildren =
  {
    AuthAdministrationExportIndexRoute: AuthAdministrationExportIndexRoute,
  };

const AuthAdministrationExportRouteWithChildren =
  AuthAdministrationExportRoute._addFileChildren(
    AuthAdministrationExportRouteChildren,
  );

interface AuthAdministrationLanguagesRouteChildren {
  AuthAdministrationLanguagesNewRoute: typeof AuthAdministrationLanguagesNewRoute;
  AuthAdministrationLanguagesIndexRoute: typeof AuthAdministrationLanguagesIndexRoute;
  AuthAdministrationLanguagesEditIdRoute: typeof AuthAdministrationLanguagesEditIdRoute;
}

const AuthAdministrationLanguagesRouteChildren: AuthAdministrationLanguagesRouteChildren =
  {
    AuthAdministrationLanguagesNewRoute: AuthAdministrationLanguagesNewRoute,
    AuthAdministrationLanguagesIndexRoute:
      AuthAdministrationLanguagesIndexRoute,
    AuthAdministrationLanguagesEditIdRoute:
      AuthAdministrationLanguagesEditIdRoute,
  };

const AuthAdministrationLanguagesRouteWithChildren =
  AuthAdministrationLanguagesRoute._addFileChildren(
    AuthAdministrationLanguagesRouteChildren,
  );

interface AuthAdministrationParticipantsRouteChildren {
  AuthAdministrationParticipantsImportRoute: typeof AuthAdministrationParticipantsImportRoute;
  AuthAdministrationParticipantsNewRoute: typeof AuthAdministrationParticipantsNewRoute;
  AuthAdministrationParticipantsIndexRoute: typeof AuthAdministrationParticipantsIndexRoute;
  AuthAdministrationParticipantsEditIdRoute: typeof AuthAdministrationParticipantsEditIdRoute;
}

const AuthAdministrationParticipantsRouteChildren: AuthAdministrationParticipantsRouteChildren =
  {
    AuthAdministrationParticipantsImportRoute:
      AuthAdministrationParticipantsImportRoute,
    AuthAdministrationParticipantsNewRoute:
      AuthAdministrationParticipantsNewRoute,
    AuthAdministrationParticipantsIndexRoute:
      AuthAdministrationParticipantsIndexRoute,
    AuthAdministrationParticipantsEditIdRoute:
      AuthAdministrationParticipantsEditIdRoute,
  };

const AuthAdministrationParticipantsRouteWithChildren =
  AuthAdministrationParticipantsRoute._addFileChildren(
    AuthAdministrationParticipantsRouteChildren,
  );

interface AuthAdministrationQuestionnairesRouteChildren {
  AuthAdministrationQuestionnairesIndexRoute: typeof AuthAdministrationQuestionnairesIndexRoute;
  AuthAdministrationQuestionnairesEditIdRoute: typeof AuthAdministrationQuestionnairesEditIdRoute;
}

const AuthAdministrationQuestionnairesRouteChildren: AuthAdministrationQuestionnairesRouteChildren =
  {
    AuthAdministrationQuestionnairesIndexRoute:
      AuthAdministrationQuestionnairesIndexRoute,
    AuthAdministrationQuestionnairesEditIdRoute:
      AuthAdministrationQuestionnairesEditIdRoute,
  };

const AuthAdministrationQuestionnairesRouteWithChildren =
  AuthAdministrationQuestionnairesRoute._addFileChildren(
    AuthAdministrationQuestionnairesRouteChildren,
  );

interface AuthAdministrationStudiesRouteChildren {
  AuthAdministrationStudiesNewRoute: typeof AuthAdministrationStudiesNewRoute;
  AuthAdministrationStudiesIndexRoute: typeof AuthAdministrationStudiesIndexRoute;
  AuthAdministrationStudiesEditIdRoute: typeof AuthAdministrationStudiesEditIdRoute;
}

const AuthAdministrationStudiesRouteChildren: AuthAdministrationStudiesRouteChildren =
  {
    AuthAdministrationStudiesNewRoute: AuthAdministrationStudiesNewRoute,
    AuthAdministrationStudiesIndexRoute: AuthAdministrationStudiesIndexRoute,
    AuthAdministrationStudiesEditIdRoute: AuthAdministrationStudiesEditIdRoute,
  };

const AuthAdministrationStudiesRouteWithChildren =
  AuthAdministrationStudiesRoute._addFileChildren(
    AuthAdministrationStudiesRouteChildren,
  );

interface AuthAdministrationUsersRouteChildren {
  AuthAdministrationUsersNewRoute: typeof AuthAdministrationUsersNewRoute;
  AuthAdministrationUsersIndexRoute: typeof AuthAdministrationUsersIndexRoute;
  AuthAdministrationUsersEditIdRoute: typeof AuthAdministrationUsersEditIdRoute;
}

const AuthAdministrationUsersRouteChildren: AuthAdministrationUsersRouteChildren =
  {
    AuthAdministrationUsersNewRoute: AuthAdministrationUsersNewRoute,
    AuthAdministrationUsersIndexRoute: AuthAdministrationUsersIndexRoute,
    AuthAdministrationUsersEditIdRoute: AuthAdministrationUsersEditIdRoute,
  };

const AuthAdministrationUsersRouteWithChildren =
  AuthAdministrationUsersRoute._addFileChildren(
    AuthAdministrationUsersRouteChildren,
  );

interface AuthAdministrationRouteChildren {
  AuthAdministrationCarersRoute: typeof AuthAdministrationCarersRouteWithChildren;
  AuthAdministrationExportRoute: typeof AuthAdministrationExportRouteWithChildren;
  AuthAdministrationLanguagesRoute: typeof AuthAdministrationLanguagesRouteWithChildren;
  AuthAdministrationParticipantsRoute: typeof AuthAdministrationParticipantsRouteWithChildren;
  AuthAdministrationQuestionnairesRoute: typeof AuthAdministrationQuestionnairesRouteWithChildren;
  AuthAdministrationStudiesRoute: typeof AuthAdministrationStudiesRouteWithChildren;
  AuthAdministrationUsersRoute: typeof AuthAdministrationUsersRouteWithChildren;
  AuthAdministrationIndexRoute: typeof AuthAdministrationIndexRoute;
}

const AuthAdministrationRouteChildren: AuthAdministrationRouteChildren = {
  AuthAdministrationCarersRoute: AuthAdministrationCarersRouteWithChildren,
  AuthAdministrationExportRoute: AuthAdministrationExportRouteWithChildren,
  AuthAdministrationLanguagesRoute:
    AuthAdministrationLanguagesRouteWithChildren,
  AuthAdministrationParticipantsRoute:
    AuthAdministrationParticipantsRouteWithChildren,
  AuthAdministrationQuestionnairesRoute:
    AuthAdministrationQuestionnairesRouteWithChildren,
  AuthAdministrationStudiesRoute: AuthAdministrationStudiesRouteWithChildren,
  AuthAdministrationUsersRoute: AuthAdministrationUsersRouteWithChildren,
  AuthAdministrationIndexRoute: AuthAdministrationIndexRoute,
};

const AuthAdministrationRouteWithChildren =
  AuthAdministrationRoute._addFileChildren(AuthAdministrationRouteChildren);

interface AuthQuestionnaireQuestionnaireRouteChildren {
  AuthQuestionnaireQuestionnaireNewRoute: typeof AuthQuestionnaireQuestionnaireNewRoute;
  AuthQuestionnaireQuestionnaireParticipantRoute: typeof AuthQuestionnaireQuestionnaireParticipantRoute;
  AuthQuestionnaireQuestionnaireIdEntriesRoute: typeof AuthQuestionnaireQuestionnaireIdEntriesRoute;
  AuthQuestionnaireQuestionnaireIdOverviewRoute: typeof AuthQuestionnaireQuestionnaireIdOverviewRoute;
  AuthQuestionnaireQuestionnaireIdPeriodRoute: typeof AuthQuestionnaireQuestionnaireIdPeriodRoute;
  AuthQuestionnaireQuestionnaireIdRemarksRoute: typeof AuthQuestionnaireQuestionnaireIdRemarksRoute;
}

const AuthQuestionnaireQuestionnaireRouteChildren: AuthQuestionnaireQuestionnaireRouteChildren =
  {
    AuthQuestionnaireQuestionnaireNewRoute:
      AuthQuestionnaireQuestionnaireNewRoute,
    AuthQuestionnaireQuestionnaireParticipantRoute:
      AuthQuestionnaireQuestionnaireParticipantRoute,
    AuthQuestionnaireQuestionnaireIdEntriesRoute:
      AuthQuestionnaireQuestionnaireIdEntriesRoute,
    AuthQuestionnaireQuestionnaireIdOverviewRoute:
      AuthQuestionnaireQuestionnaireIdOverviewRoute,
    AuthQuestionnaireQuestionnaireIdPeriodRoute:
      AuthQuestionnaireQuestionnaireIdPeriodRoute,
    AuthQuestionnaireQuestionnaireIdRemarksRoute:
      AuthQuestionnaireQuestionnaireIdRemarksRoute,
  };

const AuthQuestionnaireQuestionnaireRouteWithChildren =
  AuthQuestionnaireQuestionnaireRoute._addFileChildren(
    AuthQuestionnaireQuestionnaireRouteChildren,
  );

interface AuthQuestionnaireRouteChildren {
  AuthQuestionnaireQuestionnaireRoute: typeof AuthQuestionnaireQuestionnaireRouteWithChildren;
  AuthQuestionnaireIndexRoute: typeof AuthQuestionnaireIndexRoute;
}

const AuthQuestionnaireRouteChildren: AuthQuestionnaireRouteChildren = {
  AuthQuestionnaireQuestionnaireRoute:
    AuthQuestionnaireQuestionnaireRouteWithChildren,
  AuthQuestionnaireIndexRoute: AuthQuestionnaireIndexRoute,
};

const AuthQuestionnaireRouteWithChildren =
  AuthQuestionnaireRoute._addFileChildren(AuthQuestionnaireRouteChildren);

interface AuthRouteChildren {
  AuthAdministrationRoute: typeof AuthAdministrationRouteWithChildren;
  AuthQuestionnaireRoute: typeof AuthQuestionnaireRouteWithChildren;
  AuthIndexRoute: typeof AuthIndexRoute;
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAdministrationRoute: AuthAdministrationRouteWithChildren,
  AuthQuestionnaireRoute: AuthQuestionnaireRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
};

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren);

export interface FileRoutesByFullPath {
  "": typeof AuthRouteWithChildren;
  "/session": typeof SessionRoute;
  "/administration": typeof AuthAdministrationRouteWithChildren;
  "/questionnaire": typeof AuthQuestionnaireQuestionnaireRouteWithChildren;
  "/": typeof AuthIndexRoute;
  "/administration/carers": typeof AuthAdministrationCarersRouteWithChildren;
  "/administration/export": typeof AuthAdministrationExportRouteWithChildren;
  "/administration/languages": typeof AuthAdministrationLanguagesRouteWithChildren;
  "/administration/participants": typeof AuthAdministrationParticipantsRouteWithChildren;
  "/administration/questionnaires": typeof AuthAdministrationQuestionnairesRouteWithChildren;
  "/administration/studies": typeof AuthAdministrationStudiesRouteWithChildren;
  "/administration/users": typeof AuthAdministrationUsersRouteWithChildren;
  "/administration/": typeof AuthAdministrationIndexRoute;
  "/questionnaire/": typeof AuthQuestionnaireIndexRoute;
  "/administration/carers/new": typeof AuthAdministrationCarersNewRoute;
  "/administration/languages/new": typeof AuthAdministrationLanguagesNewRoute;
  "/administration/participants/import": typeof AuthAdministrationParticipantsImportRoute;
  "/administration/participants/new": typeof AuthAdministrationParticipantsNewRoute;
  "/administration/studies/new": typeof AuthAdministrationStudiesNewRoute;
  "/administration/users/new": typeof AuthAdministrationUsersNewRoute;
  "/questionnaire/new": typeof AuthQuestionnaireQuestionnaireNewRoute;
  "/questionnaire/participant": typeof AuthQuestionnaireQuestionnaireParticipantRoute;
  "/administration/carers/": typeof AuthAdministrationCarersIndexRoute;
  "/administration/export/": typeof AuthAdministrationExportIndexRoute;
  "/administration/languages/": typeof AuthAdministrationLanguagesIndexRoute;
  "/administration/participants/": typeof AuthAdministrationParticipantsIndexRoute;
  "/administration/questionnaires/": typeof AuthAdministrationQuestionnairesIndexRoute;
  "/administration/studies/": typeof AuthAdministrationStudiesIndexRoute;
  "/administration/users/": typeof AuthAdministrationUsersIndexRoute;
  "/administration/carers/edit/$id": typeof AuthAdministrationCarersEditIdRoute;
  "/administration/languages/edit/$id": typeof AuthAdministrationLanguagesEditIdRoute;
  "/administration/participants/edit/$id": typeof AuthAdministrationParticipantsEditIdRoute;
  "/administration/questionnaires/edit/$id": typeof AuthAdministrationQuestionnairesEditIdRoute;
  "/administration/studies/edit/$id": typeof AuthAdministrationStudiesEditIdRoute;
  "/administration/users/edit/$id": typeof AuthAdministrationUsersEditIdRoute;
  "/questionnaire/$id/entries": typeof AuthQuestionnaireQuestionnaireIdEntriesRoute;
  "/questionnaire/$id/overview": typeof AuthQuestionnaireQuestionnaireIdOverviewRoute;
  "/questionnaire/$id/period": typeof AuthQuestionnaireQuestionnaireIdPeriodRoute;
  "/questionnaire/$id/remarks": typeof AuthQuestionnaireQuestionnaireIdRemarksRoute;
}

export interface FileRoutesByTo {
  "/session": typeof SessionRoute;
  "/": typeof AuthIndexRoute;
  "/questionnaire": typeof AuthQuestionnaireIndexRoute;
  "/administration": typeof AuthAdministrationIndexRoute;
  "/administration/carers/new": typeof AuthAdministrationCarersNewRoute;
  "/administration/languages/new": typeof AuthAdministrationLanguagesNewRoute;
  "/administration/participants/import": typeof AuthAdministrationParticipantsImportRoute;
  "/administration/participants/new": typeof AuthAdministrationParticipantsNewRoute;
  "/administration/studies/new": typeof AuthAdministrationStudiesNewRoute;
  "/administration/users/new": typeof AuthAdministrationUsersNewRoute;
  "/questionnaire/new": typeof AuthQuestionnaireQuestionnaireNewRoute;
  "/questionnaire/participant": typeof AuthQuestionnaireQuestionnaireParticipantRoute;
  "/administration/carers": typeof AuthAdministrationCarersIndexRoute;
  "/administration/export": typeof AuthAdministrationExportIndexRoute;
  "/administration/languages": typeof AuthAdministrationLanguagesIndexRoute;
  "/administration/participants": typeof AuthAdministrationParticipantsIndexRoute;
  "/administration/questionnaires": typeof AuthAdministrationQuestionnairesIndexRoute;
  "/administration/studies": typeof AuthAdministrationStudiesIndexRoute;
  "/administration/users": typeof AuthAdministrationUsersIndexRoute;
  "/administration/carers/edit/$id": typeof AuthAdministrationCarersEditIdRoute;
  "/administration/languages/edit/$id": typeof AuthAdministrationLanguagesEditIdRoute;
  "/administration/participants/edit/$id": typeof AuthAdministrationParticipantsEditIdRoute;
  "/administration/questionnaires/edit/$id": typeof AuthAdministrationQuestionnairesEditIdRoute;
  "/administration/studies/edit/$id": typeof AuthAdministrationStudiesEditIdRoute;
  "/administration/users/edit/$id": typeof AuthAdministrationUsersEditIdRoute;
  "/questionnaire/$id/entries": typeof AuthQuestionnaireQuestionnaireIdEntriesRoute;
  "/questionnaire/$id/overview": typeof AuthQuestionnaireQuestionnaireIdOverviewRoute;
  "/questionnaire/$id/period": typeof AuthQuestionnaireQuestionnaireIdPeriodRoute;
  "/questionnaire/$id/remarks": typeof AuthQuestionnaireQuestionnaireIdRemarksRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_auth": typeof AuthRouteWithChildren;
  "/session": typeof SessionRoute;
  "/_auth/administration": typeof AuthAdministrationRouteWithChildren;
  "/_auth/questionnaire": typeof AuthQuestionnaireRouteWithChildren;
  "/_auth/": typeof AuthIndexRoute;
  "/_auth/administration/carers": typeof AuthAdministrationCarersRouteWithChildren;
  "/_auth/administration/export": typeof AuthAdministrationExportRouteWithChildren;
  "/_auth/administration/languages": typeof AuthAdministrationLanguagesRouteWithChildren;
  "/_auth/administration/participants": typeof AuthAdministrationParticipantsRouteWithChildren;
  "/_auth/administration/questionnaires": typeof AuthAdministrationQuestionnairesRouteWithChildren;
  "/_auth/administration/studies": typeof AuthAdministrationStudiesRouteWithChildren;
  "/_auth/administration/users": typeof AuthAdministrationUsersRouteWithChildren;
  "/_auth/questionnaire/_questionnaire": typeof AuthQuestionnaireQuestionnaireRouteWithChildren;
  "/_auth/administration/": typeof AuthAdministrationIndexRoute;
  "/_auth/questionnaire/": typeof AuthQuestionnaireIndexRoute;
  "/_auth/administration/carers/new": typeof AuthAdministrationCarersNewRoute;
  "/_auth/administration/languages/new": typeof AuthAdministrationLanguagesNewRoute;
  "/_auth/administration/participants/import": typeof AuthAdministrationParticipantsImportRoute;
  "/_auth/administration/participants/new": typeof AuthAdministrationParticipantsNewRoute;
  "/_auth/administration/studies/new": typeof AuthAdministrationStudiesNewRoute;
  "/_auth/administration/users/new": typeof AuthAdministrationUsersNewRoute;
  "/_auth/questionnaire/_questionnaire/new": typeof AuthQuestionnaireQuestionnaireNewRoute;
  "/_auth/questionnaire/_questionnaire/participant": typeof AuthQuestionnaireQuestionnaireParticipantRoute;
  "/_auth/administration/carers/": typeof AuthAdministrationCarersIndexRoute;
  "/_auth/administration/export/": typeof AuthAdministrationExportIndexRoute;
  "/_auth/administration/languages/": typeof AuthAdministrationLanguagesIndexRoute;
  "/_auth/administration/participants/": typeof AuthAdministrationParticipantsIndexRoute;
  "/_auth/administration/questionnaires/": typeof AuthAdministrationQuestionnairesIndexRoute;
  "/_auth/administration/studies/": typeof AuthAdministrationStudiesIndexRoute;
  "/_auth/administration/users/": typeof AuthAdministrationUsersIndexRoute;
  "/_auth/administration/carers/edit/$id": typeof AuthAdministrationCarersEditIdRoute;
  "/_auth/administration/languages/edit/$id": typeof AuthAdministrationLanguagesEditIdRoute;
  "/_auth/administration/participants/edit/$id": typeof AuthAdministrationParticipantsEditIdRoute;
  "/_auth/administration/questionnaires/edit/$id": typeof AuthAdministrationQuestionnairesEditIdRoute;
  "/_auth/administration/studies/edit/$id": typeof AuthAdministrationStudiesEditIdRoute;
  "/_auth/administration/users/edit/$id": typeof AuthAdministrationUsersEditIdRoute;
  "/_auth/questionnaire/_questionnaire/$id/entries": typeof AuthQuestionnaireQuestionnaireIdEntriesRoute;
  "/_auth/questionnaire/_questionnaire/$id/overview": typeof AuthQuestionnaireQuestionnaireIdOverviewRoute;
  "/_auth/questionnaire/_questionnaire/$id/period": typeof AuthQuestionnaireQuestionnaireIdPeriodRoute;
  "/_auth/questionnaire/_questionnaire/$id/remarks": typeof AuthQuestionnaireQuestionnaireIdRemarksRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | ""
    | "/session"
    | "/administration"
    | "/questionnaire"
    | "/"
    | "/administration/carers"
    | "/administration/export"
    | "/administration/languages"
    | "/administration/participants"
    | "/administration/questionnaires"
    | "/administration/studies"
    | "/administration/users"
    | "/administration/"
    | "/questionnaire/"
    | "/administration/carers/new"
    | "/administration/languages/new"
    | "/administration/participants/import"
    | "/administration/participants/new"
    | "/administration/studies/new"
    | "/administration/users/new"
    | "/questionnaire/new"
    | "/questionnaire/participant"
    | "/administration/carers/"
    | "/administration/export/"
    | "/administration/languages/"
    | "/administration/participants/"
    | "/administration/questionnaires/"
    | "/administration/studies/"
    | "/administration/users/"
    | "/administration/carers/edit/$id"
    | "/administration/languages/edit/$id"
    | "/administration/participants/edit/$id"
    | "/administration/questionnaires/edit/$id"
    | "/administration/studies/edit/$id"
    | "/administration/users/edit/$id"
    | "/questionnaire/$id/entries"
    | "/questionnaire/$id/overview"
    | "/questionnaire/$id/period"
    | "/questionnaire/$id/remarks";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/session"
    | "/"
    | "/questionnaire"
    | "/administration"
    | "/administration/carers/new"
    | "/administration/languages/new"
    | "/administration/participants/import"
    | "/administration/participants/new"
    | "/administration/studies/new"
    | "/administration/users/new"
    | "/questionnaire/new"
    | "/questionnaire/participant"
    | "/administration/carers"
    | "/administration/export"
    | "/administration/languages"
    | "/administration/participants"
    | "/administration/questionnaires"
    | "/administration/studies"
    | "/administration/users"
    | "/administration/carers/edit/$id"
    | "/administration/languages/edit/$id"
    | "/administration/participants/edit/$id"
    | "/administration/questionnaires/edit/$id"
    | "/administration/studies/edit/$id"
    | "/administration/users/edit/$id"
    | "/questionnaire/$id/entries"
    | "/questionnaire/$id/overview"
    | "/questionnaire/$id/period"
    | "/questionnaire/$id/remarks";
  id:
    | "__root__"
    | "/_auth"
    | "/session"
    | "/_auth/administration"
    | "/_auth/questionnaire"
    | "/_auth/"
    | "/_auth/administration/carers"
    | "/_auth/administration/export"
    | "/_auth/administration/languages"
    | "/_auth/administration/participants"
    | "/_auth/administration/questionnaires"
    | "/_auth/administration/studies"
    | "/_auth/administration/users"
    | "/_auth/questionnaire/_questionnaire"
    | "/_auth/administration/"
    | "/_auth/questionnaire/"
    | "/_auth/administration/carers/new"
    | "/_auth/administration/languages/new"
    | "/_auth/administration/participants/import"
    | "/_auth/administration/participants/new"
    | "/_auth/administration/studies/new"
    | "/_auth/administration/users/new"
    | "/_auth/questionnaire/_questionnaire/new"
    | "/_auth/questionnaire/_questionnaire/participant"
    | "/_auth/administration/carers/"
    | "/_auth/administration/export/"
    | "/_auth/administration/languages/"
    | "/_auth/administration/participants/"
    | "/_auth/administration/questionnaires/"
    | "/_auth/administration/studies/"
    | "/_auth/administration/users/"
    | "/_auth/administration/carers/edit/$id"
    | "/_auth/administration/languages/edit/$id"
    | "/_auth/administration/participants/edit/$id"
    | "/_auth/administration/questionnaires/edit/$id"
    | "/_auth/administration/studies/edit/$id"
    | "/_auth/administration/users/edit/$id"
    | "/_auth/questionnaire/_questionnaire/$id/entries"
    | "/_auth/questionnaire/_questionnaire/$id/overview"
    | "/_auth/questionnaire/_questionnaire/$id/period"
    | "/_auth/questionnaire/_questionnaire/$id/remarks";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren;
  SessionRoute: typeof SessionRoute;
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  SessionRoute: SessionRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/session"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/administration",
        "/_auth/questionnaire",
        "/_auth/"
      ]
    },
    "/session": {
      "filePath": "session.tsx"
    },
    "/_auth/administration": {
      "filePath": "_auth/administration.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/administration/carers",
        "/_auth/administration/export",
        "/_auth/administration/languages",
        "/_auth/administration/participants",
        "/_auth/administration/questionnaires",
        "/_auth/administration/studies",
        "/_auth/administration/users",
        "/_auth/administration/"
      ]
    },
    "/_auth/questionnaire": {
      "filePath": "_auth/questionnaire.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/questionnaire/_questionnaire",
        "/_auth/questionnaire/"
      ]
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/administration/carers": {
      "filePath": "_auth/administration/carers.tsx",
      "parent": "/_auth/administration",
      "children": [
        "/_auth/administration/carers/new",
        "/_auth/administration/carers/",
        "/_auth/administration/carers/edit/$id"
      ]
    },
    "/_auth/administration/export": {
      "filePath": "_auth/administration/export.tsx",
      "parent": "/_auth/administration",
      "children": [
        "/_auth/administration/export/"
      ]
    },
    "/_auth/administration/languages": {
      "filePath": "_auth/administration/languages.tsx",
      "parent": "/_auth/administration",
      "children": [
        "/_auth/administration/languages/new",
        "/_auth/administration/languages/",
        "/_auth/administration/languages/edit/$id"
      ]
    },
    "/_auth/administration/participants": {
      "filePath": "_auth/administration/participants.tsx",
      "parent": "/_auth/administration",
      "children": [
        "/_auth/administration/participants/import",
        "/_auth/administration/participants/new",
        "/_auth/administration/participants/",
        "/_auth/administration/participants/edit/$id"
      ]
    },
    "/_auth/administration/questionnaires": {
      "filePath": "_auth/administration/questionnaires.tsx",
      "parent": "/_auth/administration",
      "children": [
        "/_auth/administration/questionnaires/",
        "/_auth/administration/questionnaires/edit/$id"
      ]
    },
    "/_auth/administration/studies": {
      "filePath": "_auth/administration/studies.tsx",
      "parent": "/_auth/administration",
      "children": [
        "/_auth/administration/studies/new",
        "/_auth/administration/studies/",
        "/_auth/administration/studies/edit/$id"
      ]
    },
    "/_auth/administration/users": {
      "filePath": "_auth/administration/users.tsx",
      "parent": "/_auth/administration",
      "children": [
        "/_auth/administration/users/new",
        "/_auth/administration/users/",
        "/_auth/administration/users/edit/$id"
      ]
    },
    "/_auth/questionnaire/_questionnaire": {
      "filePath": "_auth/questionnaire/_questionnaire.tsx",
      "parent": "/_auth/questionnaire",
      "children": [
        "/_auth/questionnaire/_questionnaire/new",
        "/_auth/questionnaire/_questionnaire/participant",
        "/_auth/questionnaire/_questionnaire/$id/entries",
        "/_auth/questionnaire/_questionnaire/$id/overview",
        "/_auth/questionnaire/_questionnaire/$id/period",
        "/_auth/questionnaire/_questionnaire/$id/remarks"
      ]
    },
    "/_auth/administration/": {
      "filePath": "_auth/administration/index.tsx",
      "parent": "/_auth/administration"
    },
    "/_auth/questionnaire/": {
      "filePath": "_auth/questionnaire/index.tsx",
      "parent": "/_auth/questionnaire"
    },
    "/_auth/administration/carers/new": {
      "filePath": "_auth/administration/carers/new.tsx",
      "parent": "/_auth/administration/carers"
    },
    "/_auth/administration/languages/new": {
      "filePath": "_auth/administration/languages/new.tsx",
      "parent": "/_auth/administration/languages"
    },
    "/_auth/administration/participants/import": {
      "filePath": "_auth/administration/participants/import.tsx",
      "parent": "/_auth/administration/participants"
    },
    "/_auth/administration/participants/new": {
      "filePath": "_auth/administration/participants/new.tsx",
      "parent": "/_auth/administration/participants"
    },
    "/_auth/administration/studies/new": {
      "filePath": "_auth/administration/studies/new.tsx",
      "parent": "/_auth/administration/studies"
    },
    "/_auth/administration/users/new": {
      "filePath": "_auth/administration/users/new.tsx",
      "parent": "/_auth/administration/users"
    },
    "/_auth/questionnaire/_questionnaire/new": {
      "filePath": "_auth/questionnaire/_questionnaire/new.tsx",
      "parent": "/_auth/questionnaire/_questionnaire"
    },
    "/_auth/questionnaire/_questionnaire/participant": {
      "filePath": "_auth/questionnaire/_questionnaire/participant.tsx",
      "parent": "/_auth/questionnaire/_questionnaire"
    },
    "/_auth/administration/carers/": {
      "filePath": "_auth/administration/carers/index.tsx",
      "parent": "/_auth/administration/carers"
    },
    "/_auth/administration/export/": {
      "filePath": "_auth/administration/export/index.tsx",
      "parent": "/_auth/administration/export"
    },
    "/_auth/administration/languages/": {
      "filePath": "_auth/administration/languages/index.tsx",
      "parent": "/_auth/administration/languages"
    },
    "/_auth/administration/participants/": {
      "filePath": "_auth/administration/participants/index.tsx",
      "parent": "/_auth/administration/participants"
    },
    "/_auth/administration/questionnaires/": {
      "filePath": "_auth/administration/questionnaires/index.tsx",
      "parent": "/_auth/administration/questionnaires"
    },
    "/_auth/administration/studies/": {
      "filePath": "_auth/administration/studies/index.tsx",
      "parent": "/_auth/administration/studies"
    },
    "/_auth/administration/users/": {
      "filePath": "_auth/administration/users/index.tsx",
      "parent": "/_auth/administration/users"
    },
    "/_auth/administration/carers/edit/$id": {
      "filePath": "_auth/administration/carers/edit.$id.tsx",
      "parent": "/_auth/administration/carers"
    },
    "/_auth/administration/languages/edit/$id": {
      "filePath": "_auth/administration/languages/edit.$id.tsx",
      "parent": "/_auth/administration/languages"
    },
    "/_auth/administration/participants/edit/$id": {
      "filePath": "_auth/administration/participants/edit.$id.tsx",
      "parent": "/_auth/administration/participants"
    },
    "/_auth/administration/questionnaires/edit/$id": {
      "filePath": "_auth/administration/questionnaires/edit.$id.tsx",
      "parent": "/_auth/administration/questionnaires"
    },
    "/_auth/administration/studies/edit/$id": {
      "filePath": "_auth/administration/studies/edit.$id.tsx",
      "parent": "/_auth/administration/studies"
    },
    "/_auth/administration/users/edit/$id": {
      "filePath": "_auth/administration/users/edit.$id.tsx",
      "parent": "/_auth/administration/users"
    },
    "/_auth/questionnaire/_questionnaire/$id/entries": {
      "filePath": "_auth/questionnaire/_questionnaire/$id/entries.tsx",
      "parent": "/_auth/questionnaire/_questionnaire"
    },
    "/_auth/questionnaire/_questionnaire/$id/overview": {
      "filePath": "_auth/questionnaire/_questionnaire/$id/overview.tsx",
      "parent": "/_auth/questionnaire/_questionnaire"
    },
    "/_auth/questionnaire/_questionnaire/$id/period": {
      "filePath": "_auth/questionnaire/_questionnaire/$id/period.tsx",
      "parent": "/_auth/questionnaire/_questionnaire"
    },
    "/_auth/questionnaire/_questionnaire/$id/remarks": {
      "filePath": "_auth/questionnaire/_questionnaire/$id/remarks.tsx",
      "parent": "/_auth/questionnaire/_questionnaire"
    }
  }
}
ROUTE_MANIFEST_END */
