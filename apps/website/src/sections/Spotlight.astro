---
import { Image } from "astro:assets";
import UzhLogo from "../assets/logos/uzh-logo.svg";
import Video from "../assets/videos/quassel.mp4";
import Poster from "../assets/videos/poster.png";
import PlayButtonSymbol from "../assets/videos/play-button-symbol.svg";
---

<style>
  section {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: radial-gradient(50% 50% at 50% 50%, var(--color-primary) 60%, transparent 100%);
    font-size: var(--font-size-lg);
  }

  h1 {
    font-size: var(--font-size-xxxl);
  }

  h2 {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-medium);
    align-self: center;
  }

  .intro {
    text-align: center;
    margin-bottom: var(--spacing-lg);
    padding: var(--spacing-sm) var(--spacing-xl);
    max-width: 37rem;
  }

  .video-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    width: 100%;
  }

  video {
    width: 100%;
    height: auto;
    box-shadow: 0 0 4rem var(--color-card);
    margin-inline: var(--spacing-xl);
  }

  .video-not-interactive {
    pointer-events: none;
  }

  video::-webkit-media-controls-panel {
    background-image: none;
    filter: brightness(0.2);
  }

  .play-button {
    position: absolute;
    cursor: pointer;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    transform-origin: center center;
    width: clamp(3rem, 10vw, 6rem);
  }

  .play-button.hidden {
    visibility: hidden;
  }

  .play-button:hover {
    transform: scale(1.1);
  }

  .used-by {
    margin-top: var(--spacing-xl);
    display: flex;
    gap: var(--spacing-lg);

    @media (max-width: 640px) {
      flex-direction: column;
      gap: 0;
    }
  }

  .used-by img {
    max-height: 4rem;
  }

  .used-by a :hover {
    transform: scale(1.03);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const video = document.querySelector("video") as HTMLVideoElement;
    const playButton = document.querySelector(".play-button") as HTMLButtonElement;
    let wasSeeking = false;

    const togglePlayButton = () => {
      if (!video.seeking && !wasSeeking) {
        playButton.classList.toggle("hidden");
        video.toggleAttribute("controls");
      } else {
        wasSeeking = !wasSeeking;
      }
    };

    playButton.addEventListener("click", () => video.play());
    video.addEventListener("play", togglePlayButton);
    video.addEventListener("pause", togglePlayButton);
    video.addEventListener("click", () => {
      if (video.paused) {
        video.play();
      } else {
        video.pause();
      }
    });
  });
</script>

<section>
  <div class="intro">
    <h1>Gather language exposure data</h1>
    <p>Efficient documenting <strong>children's</strong> language exposure by carer, language and time.</p>
  </div>
  <div class="video-wrapper">
    <video poster={Poster.src} muted playsinline>
      <source src={Video} type="video/mp4" />
    </video>
    <Image class="play-button" src={PlayButtonSymbol} alt="Play button symbol" />
  </div>
  <div class="used-by">
    <h2>Used by</h2>
    <a href="https://www.uzh.ch/en.html"><Image src={UzhLogo} alt="University of Zurich" /></a>
  </div>
</section>
